{% extends 'home.html.twig' %}

{% block title %}Inscription{% endblock %}
{% block footer %}{% endblock %}
{% block body %}
    <style>
        /* Background Image */
        body {
            background-image: url('images/backg.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
        }

        /* Semi-transparent form container */
        .card {
            background: rgba(255, 255, 255, 0.3); /* White with 30% transparency */
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Light shadow for depth */
            backdrop-filter: blur(5px); /* Blur effect for a frosted glass look */
        }

        /* Semi-transparent input fields */
        .form-control {
            background: rgba(255, 255, 255, 0.4); /* White with 40% transparency */
            border: 1px solid rgba(255, 255, 255, 0.6); /* Light border */
            color: #000; /* Text color */
        }

        .form-control:focus {
            background: rgba(255, 255, 255, 0.6); /* Slightly less transparent on focus */
            border-color: #007bff; /* Highlighted border */
        }

        .form-control::placeholder {
            color: rgba(0, 0, 0, 0.6); /* Darker placeholder for readability */
        }

        /* Button styling */
        .btn-primary {
            background: rgba(0, 123, 255, 0.8); /* Slight transparency */
            border: none;
        }

        .btn-primary:hover {
            background: rgba(0, 123, 255, 1); /* Solid color on hover */
        }
    </style>

    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    {% for flash_error in app.flashes('verify_email_error') %}
        <div class="alert alert-danger" role="alert">{{ flash_error }}</div>
    {% endfor %}

    {{ form_start(registrationForm, {'attr': {'novalidate': 'novalidate', 'enctype': 'multipart/form-data'}}) }}
    <div class="container mt-4">
        <div class="card mx-auto" style="max-width: 600px;">
            <div class="card-body">
                <div class="row justify-content-center">
                    <div class="col-md-8">
                        <h1 class="text-center mb-4">Inscription</h1>

                        {{ form_row(registrationForm.nom, {
                            'attr': {'class': 'form-control', 'placeholder': 'Entrez votre nom de famille'},
                            'label': 'Nom de famille'
                        }) }}
                        {{ form_row(registrationForm.prenom, {
                            'attr': {'class': 'form-control', 'placeholder': 'Entrez votre prénom'},
                            'label': 'Prénom'
                        }) }}
                        {{ form_row(registrationForm.email, {
                            'attr': {'class': 'form-control', 'placeholder': 'Entrez votre email'},
                            'label': 'Email'
                        }) }}
                        {{ form_row(registrationForm.travail, {
                            'attr': {'class': 'form-control'},
                            'label': 'Rôle'
                        }) }}
                        {{ form_row(registrationForm.numTel, {
                            'attr': {'class': 'form-control', 'placeholder': 'Entrez votre numéro de téléphone'},
                            'label': 'Numéro de téléphone'
                        }) }}
                        {{ form_row(registrationForm.photoUrl, {
                            'attr': {'class': 'form-control'},
                            'label': 'Photo de profil'
                        }) }}
                        {{ form_row(registrationForm.plainPassword, {
                            'attr': {'class': 'form-control', 'placeholder': 'Entrez votre mot de passe'},
                            'label': 'Mot de passe'
                        }) }}
                        {{ form_row(registrationForm.agreeTerms, {
                            'label': 'J\'accepte les termes et conditions'
                        }) }}

                                {{ form_row(registrationForm.faceImage, {
                                'label': 'photo de visage pour la reconaissance faciale'
                                }) }}


                        {{ form_errors(registrationForm) }}

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary">S'inscrire</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {{ form_end(registrationForm) }}
       <!-- Chatbot Widget -->
    <div id="chatbot-container" style="position: fixed; bottom: 20px; right: 20px; width: 300px; background: white; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.3); padding: 10px; text-align: center;">
        <img src="{{ asset('images/chat-bot.gif') }}" alt="Chatbot" style="width: 80px; height: 80px; margin-bottom: 10px;">
        <div id="chatbot-messages" style="max-height: 200px; overflow-y: auto;"></div>
        <input type="text" id="chatbot-input" placeholder="Posez-moi une question..." style="width: 80%; margin-top: 10px;">
        <button id="chatbot-send" style="width: 18%;">Envoyer</button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const chatbotMessages = document.getElementById('chatbot-messages');
            const chatbotInput = document.getElementById('chatbot-input');
            const chatbotSend = document.getElementById('chatbot-send');
            const csrfToken = '{{ csrf_token('chatbot') }}';
            const chatbotUrl = '{{ path('chatbot_response') }}';

            function addMessage(text, isUser = false) {
                const msgDiv = document.createElement('div');
                msgDiv.textContent = text;
                msgDiv.style.textAlign = isUser ? 'right' : 'left';
                msgDiv.style.color = isUser ? 'blue' : 'black';
                chatbotMessages.appendChild(msgDiv);
                chatbotMessages.scrollTop = chatbotMessages.scrollHeight;
            }

            chatbotSend.addEventListener('click', () => {
                const message = chatbotInput.value.trim();
                if (message) {
                    addMessage(message, true);
                    fetch(chatbotUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-Token': csrfToken
                        },
                        body: JSON.stringify({ message: message })
                    })
                    .then(response => response.json())
                    .then(data => addMessage(data.response))
                    .catch(error => addMessage(`Erreur: ${error.message}.`));
                    chatbotInput.value = '';
                }
            });

            chatbotInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') chatbotSend.click();
            });

            addMessage('Salut ! Comment je peux t’aider ?');
        });
    </script>
{% endblock %}
