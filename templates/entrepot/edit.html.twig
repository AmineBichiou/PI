{# templates/entrepot/edit.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Modifier un Entrepôt{% endblock %}

{% block body %}
<div class="main-content">
    <div class="container-fluid p-4">
        <div class="card shadow">
            <div class="card-header bg-primary text-white py-3">
                <h5 class="m-0"><i class="fas fa-edit mr-2"></i>Modifier un Entrepôt</h5>
            </div>
            <div class="card-body">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}

                {# Affichage des erreurs globales du formulaire #}
                {% if form.vars.errors|length > 0 %}
                    <div class="alert alert-danger">
                        {{ form_errors(form) }}
                    </div>
                {% endif %}

                <div class="row g-3">
                    {# Champ Nom #}
                    <div class="col-md-6">
                        {{ form_label(form.nom, 'Nom de l\'entrepôt', {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group has-validation">
                            <span class="input-group-text"><i class="fas fa-warehouse"></i></span>
                            {{ form_widget(form.nom, {'attr': {'class': 'form-control' ~ (form.nom.vars.errors|length > 0 ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.nom) }}
                            </div>
                        </div>
                    </div>

                    {# Champ Adresse #}
                    <div class="col-md-6">
                        {{ form_label(form.adresse, 'Adresse', {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group has-validation">
                            <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                            {{ form_widget(form.adresse, {'attr': {'class': 'form-control' ~ (form.adresse.vars.errors|length > 0 ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.adresse) }}
                            </div>
                        </div>
                    </div>

                    {# Champ Ville #}
                    <div class="col-md-6">
                        {{ form_label(form.ville, 'Ville', {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group has-validation">
                            <span class="input-group-text"><i class="fas fa-city"></i></span>
                            {{ form_widget(form.ville, {'attr': {'class': 'form-control' ~ (form.ville.vars.errors|length > 0 ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.ville) }}
                            </div>
                        </div>
                    </div>

                    {# Champ Espace #}
                    <div class="col-md-6">
                        {{ form_label(form.espace, 'Espace (en m²)', {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group has-validation">
                            <span class="input-group-text"><i class="fas fa-ruler-combined"></i></span>
                            {{ form_widget(form.espace, {'attr': {'class': 'form-control' ~ (form.espace.vars.errors|length > 0 ? ' is-invalid' : '')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.espace) }}
                            </div>
                        </div>
                    </div>

                    {# Bouton de soumission #}
                    <div class="col-12 text-end">
                        <button type="submit" class="btn btn-primary shadow-sm">
                            <i class="fas fa-save mr-2"></i>Enregistrer
                        </button>
                    </div>
                </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector('form.needs-validation');

        form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
                event.preventDefault(); // Empêche la soumission du formulaire
                event.stopPropagation();

                // Récupérer tous les champs invalides
                const invalidFields = form.querySelectorAll(':invalid');

                // Afficher une boîte de dialogue avec les erreurs
                let errorMessage = "Veuillez corriger les erreurs suivantes :\n";
                invalidFields.forEach(field => {
                    errorMessage += `- ${field.getAttribute('name')}: ${field.validationMessage}\n`;
                });

                alert(errorMessage); // Affiche la boîte de dialogue
            }

            form.classList.add('was-validated');
        }, false);

        // Afficher les erreurs côté serveur dans une boîte de dialogue
        {% if errors is defined and errors|length > 0 %}
            let serverErrorMessage = "Erreurs de validation :\n";
            {% for error in errors %}
                serverErrorMessage += `- {{ error }}\n`;
            {% endfor %}
            alert(serverErrorMessage);
        {% endif %}
    });
</script>
{% endblock %}

{% endblock %}